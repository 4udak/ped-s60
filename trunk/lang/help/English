User's Guide

$ Disclaimer

Ped is distributed under the terms of the BSD License. See the [License] for detailed information.

$ Introduction

Ped is an in-phone Python IDE with IDLE-like features. It lets you edit, execute and debug your scripts directly on your phone. Ped features a multi-document interface which means that you can simultaneously work on many files and switch between them at any time. It can also be easily extended using plugins.

$ Usage

After starting, Ped welcomes you with an empty screen only displaying version information. This is Ped's desktop which will be visible when all other windows are closed. Pressing the right softkey (Exit) while the desktop is displayed, closes Ped.

To start working, go to the [Options] menu or press the Select key which lets you load a file or create a new one quickly.

$$ Options

The options menu is always available under the left softkey. Most of the options are available all the time, some of them are specific to currently visible window.

* File menu - contains all options needed to manipulate files. Standard functions like New, Open, Save, Save As and Close are available. Additionaly all currently opened files can be saved or closed at once. File operations use a sophisticated [File Browser].

* Windows menu - lists all currently opened windows and lets you switch between them. This function an be accessed quickly by pressing the Green-Green shortcut (the Green key pressed twice). This menu is hidden if there are no windows open.

* Python Shell - opens the [Python Shell].

* Run Script - opens a [File Browser] where you can choose a script to execute. The standard input/output will be redirected to the [Python Shell] which will be opened first if needed. The script's namespace will be available in the shell after execution for post-mortem debugging. If the Ask for arguments option is enabled in [Settings], Ped will ask for script arguments before execution.

* Tools menu - contains rarely used options like [Settings], [Plugins], this help or Orientation, which lets you switch Ped between portrait mode and landscape on 3rd edition devices.

* Exit - closes Ped. Before closing you will be asked if you want to store the current session or close all opened documents first. For more information about the sessions, read the [Sessions] chapter. If you choose the close all files, you will be asked if you want to save changed ones first, if any.

$$ Editor

After opening a file or creating a new one you will be presented with the editor window. This is the main Ped's window which is used to edit files.

$$$ Editor options

The Options menu of the editor contains all items described in the [Options] chapter. Additionaly it provides some editor specific functionalities.

* Edit menu - contains functions used to search through the document including both basic and so called Find All function which searches for all instances of given text at once. The menu also provides options to browse the document more easily like Go to line or Top/Bottom.

* Tools / Full Screen - this option hides the top pane (where the icon and file name is displayed) which gives you more space to work on your file. Selecting again shows the top pane again.

The editor also assigns special functions to some keys.

* Select - inserts a new-line.
* Green-Up/Down - moves one page up/down (see the Editor page of [Settings] dialog for additional information on how to make this function work properly).
* Green-Left/Right - moves to the start/end of a line.

$$ Python Shell

Python Shell is opened using the Python Shell option in main menu.

It is an interactive Python console providing (together with the [Run Script] option) the functionality of the default Python Shell distributed with PyS60 along with many more features.

The shell window is based on the [Editor] window so all the functions available there are also available here.

The shell features a true, IDLE-like commands history. Multiline commands like loops, classes or functions are also supported. To browse the history you can use the History function in Options menu or Green-Up/Down key shortcuts. You can also scroll back and click on any line to copy it to the prompt.

A smart auto-indentation feature is available. The indentation size can be configured in [Settings].

The Green-Select key shortcut triggers the [Autocomplete] feature which lets you type much faster.

A [Call Tip] function is added to the Edit menu. You can also assign it to a key shortcut using the [Settings] dialog.

You can clear the buffer at any time using the Clear option from the Edit menu. This may also be configured as a key shortcut.

The File menu contains an option to Export the buffer to a file after selecting it in a [File Browser].

The commands history by default contains a command to start a Bluetoth console.

$$ Python editor

Python editor is shown after opening a *.py file or creating a new such file. It is based on the standard [Editor] and provides all its features. Additionaly it makes editing a Python code on the phone a bit easier.

A smart auto-indentation feature is available with a configurable indentation size (see the [Settings]).

The Green-Select key shortcut triggers the [Autocomplete] feature which lets you type much faster.

A [Call Tip] function is added to the Edit menu. You can also assign it to a key shortcut using the [Settings] dialog.

Another function added to the Edit menu is a [Code Browser]. It will let you easily browse through all classes and functions defined by your file.

Once you get your code done and you want to test it, use the Run option from the menu. Note that this function does not save the file. If you have made changes since last save, it will save the file temporarily to the D: drive and run it from there.

$$ Settings

$$ Sessions

Ped features a sessions mechanism which lets you restore all document windows after closing and reopening the application. The session is saved in three cases.

* Before script execution - if the script crashes and takes Ped with it, you will be able to continue your work right where you stopped after restarting Ped.
* On Red key press - if you press the Red key on 3rd edition device, it will force Python (including Ped) to close. Before it happens, Ped will store the current session.
* When Exit is selected - if you select the Exit option from [Options] menu, you will be asked if you want to store the session. Doing so will let you continue your work later.

If the session is stored and Ped is started, a question dialog is displayed asking if the session should be reloaded. Note that no matter if the session is loaded or not, it is deleted. In other words, Ped will ask only once.

$$ Code Browser

$$ Autocomplete

$$ Call Tip

$$ File Browser

$ License

Copyright (c) 2007-2008, Arkadiusz Wahlig

All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:

    * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.
    * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.
    * Neither the name of Arkadiusz Wahlig nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
